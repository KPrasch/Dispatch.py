# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-03-14 15:36
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('unit', models.IntegerField()),
                ('unique_id', models.CharField(default=b'4fcb6c3', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('code', models.CharField(max_length=30)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='DraftSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='FixedFireAppliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliance', models.IntegerField(choices=[(b'1', b'Hydrant'), (b'2', b'Standpipe'), (b'3', b'Sprinkler Control'), (b'4', b'FD Connection')])),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FixedLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=200)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('streetview_url', models.URLField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='HeliSpot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('pts_of_interest', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Hydrant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nfpa_class', models.IntegerField(choices=[(b'1', b'AA'), (b'2', b'B'), (b'3', b'C'), (b'4', b'D')])),
                ('out_of_service', models.BooleanField(default=False)),
                ('is_barell', models.BooleanField(default=True)),
                ('is_wet', models.BooleanField(default=True)),
                ('main_size_in', models.FloatField()),
                ('sm_discharge_in', models.FloatField()),
                ('lg_discharge_in', models.FloatField()),
                ('thread_type', models.IntegerField()),
                ('flow_test_date', models.DateTimeField(blank=True, null=True)),
                ('exp_gpm', models.IntegerField()),
                ('static_pressure', models.FloatField()),
                ('flow_pressure', models.FloatField()),
                ('resid_pressure', models.FloatField()),
                ('fixed_applicance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.FixedFireAppliance')),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payload', models.CharField(editable=False, max_length=10000)),
                ('active', models.BooleanField(default=False)),
                ('annual_call_number', models.IntegerField(blank=True, null=True)),
                ('dispatch_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('received_time', models.DateTimeField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.FixedLocation')),
            ],
            options={
                'ordering': ['received_time'],
            },
        ),
        migrations.CreateModel(
            name='IncidentMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=250)),
                ('venue', models.CharField(max_length=250)),
                ('dispatch', models.CharField(max_length=250)),
                ('intersection', models.CharField(max_length=250)),
                ('unit', models.CharField(max_length=250)),
                ('incident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='map.Incident')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryResponseArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_areas', to='map.District')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('code', models.CharField(max_length=2)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1500, null=True)),
                ('construction', models.IntegerField(blank=True, choices=[(b'1', b'Fire Resistive'), (b'2', b'Non Combustible'), (b'3', b'Ordinary'), (b'4', b'Mill'), (b'5', b'Wood Frame'), (b'6', b'Unknown')], default=b'6', null=True)),
                ('trusses', models.CharField(blank=True, choices=[(b'IF', b'Type 1 Floor Truss'), (b'IIF', b'Type 2 Floor Truss'), (b'IIIF', b'Type 3 Floor Truss'), (b'IVF', b'Type 4 Floor Truss'), (b'VF', b'Type 5 Floor Truss'), (b'IR', b'Type 1 Roof Truss'), (b'IIR', b'Type 2 Roof Truss'), (b'IIIR', b'Type 3 Roof Truss'), (b'IVR', b'Type 4 Roof Truss'), (b'VR', b'Type 5 Roof Truss'), (b'IFR', b'Type 1 Floor and Roof Truss'), (b'IIFR', b'Type 2 Floor and Roof Truss'), (b'IIIFR', b'Type 3 Floor and Roof Truss'), (b'IVFR', b'Type 4 Floor and Roof Truss'), (b'VFR', b'Type 5 Floor and Roof Truss')], max_length=256, null=True)),
                ('regular_occupancy', models.PositiveIntegerField(blank=True, null=True)),
                ('stories', models.IntegerField(blank=True, null=True)),
                ('sqft', models.PositiveIntegerField(blank=True, null=True)),
                ('access', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[(b'Residence', b'Residence'), (b'Commercial', b'Commercial'), (b'Goverment', b'Goverment'), (b'Industrial', b'Industrial'), (b'Unknown', b'Unknown')], default=b'Unknown', max_length=100)),
                ('sprinklers', models.BooleanField(default=False)),
                ('additional', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StructureHazard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard', models.CharField(blank=True, choices=[(b'Fuel', b'Fuel'), (b'Chemicals', b'Chemicals'), (b'None', b'None'), (b'Unknown', b'Unknown')], default=b'Unknown', max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StructureUtility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utility', models.CharField(blank=True, choices=[(b'Heating', b'Heating'), (b'Cooking', b'Cooking'), (b'Electric', b'Electric'), (b'Solar', b'Solar'), (b'Water', b'Water'), (b'Sewer', b'Sewer'), (b'None', b'None'), (b'Unknown', b'Unknown')], default=b'Unknown', max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=512, null=True)),
                ('provider', models.CharField(blank=True, max_length=512, null=True)),
                ('notes', models.TextField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TargetHazard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('pts_of_interest', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('description', models.CharField(max_length=400)),
                ('hazmat', models.IntegerField()),
                ('response_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.PrimaryResponseArea')),
            ],
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=512)),
                ('category', models.CharField(choices=[(b'Private Residence', b'Private Residence'), (b'Shared Residence', b'Shared Residence'), (b'Business', b'Business'), (b'Commercial Structure', b'Commercial Structure'), (b'Vacation Home', b'Vacation Home'), (b'Apartments/Complex', b'Apartments/Complex')], max_length=256)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeatherSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=2000)),
                ('station', models.CharField(max_length=200)),
                ('wind_speed', models.FloatField()),
                ('wind_heading', models.FloatField()),
                ('temperature', models.FloatField()),
                ('incident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weather', to='map.IncidentMeta')),
            ],
        ),
        migrations.CreateModel(
            name='WorldBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('area', models.IntegerField()),
                ('pop2005', models.IntegerField(verbose_name=b'Population 2005')),
                ('fips', models.CharField(max_length=2, verbose_name=b'FIPS Code')),
                ('iso2', models.CharField(max_length=2, verbose_name=b'2 Digit ISO')),
                ('iso3', models.CharField(max_length=3, verbose_name=b'3 Digit ISO')),
                ('un', models.IntegerField(verbose_name=b'United Nations Code')),
                ('region', models.IntegerField(verbose_name=b'Region Code')),
                ('subregion', models.IntegerField(verbose_name=b'Sub-Region Code')),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Zipcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zip_codes', to='map.County')),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('structure_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='map.Structure')),
                ('description', models.CharField(max_length=100)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='map.Agency')),
            ],
            bases=('map.structure',),
        ),
        migrations.AddField(
            model_name='userlocation',
            name='poi',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='map.Structure'),
        ),
        migrations.AddField(
            model_name='structureutility',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilities', to='map.Structure'),
        ),
        migrations.AddField(
            model_name='structurehazard',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hazards', to='map.Structure'),
        ),
        migrations.AddField(
            model_name='structure',
            name='location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='map.FixedLocation'),
        ),
        migrations.AddField(
            model_name='helispot',
            name='primary_response_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.PrimaryResponseArea'),
        ),
        migrations.AddField(
            model_name='fixedfireappliance',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.FixedLocation'),
        ),
        migrations.AddField(
            model_name='draftsite',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.FixedLocation'),
        ),
        migrations.AddField(
            model_name='district',
            name='zip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='map.Zipcode'),
        ),
        migrations.AddField(
            model_name='county',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.State'),
        ),
        migrations.AddField(
            model_name='country',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.WorldBorder'),
        ),
        migrations.AlterUniqueTogether(
            name='incident',
            unique_together=set([('payload', 'dispatch_time')]),
        ),
    ]
